name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'

# Add permissions section to explicitly grant needed permissions
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint
        
      - name: Clean up before build
        run: npm run cleanup
        
      - name: Build and package extension
        run: npm run package:prod
        
      - name: Find built extension zip file
        id: find-zip
        run: |
          ZIP_FILE=$(find packages -name "pinned-tabs-v*.zip" | head -n 1)
          echo "zip_file=$ZIP_FILE" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const tagName = context.ref.replace('refs/tags/', '');
            const zipPath = '${{ steps.find-zip.outputs.zip_file }}';
            const zipName = zipPath.split('/').pop();
            
            const releaseData = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release ${tagName}`,
              draft: false,
              prerelease: false,
              generate_release_notes: true
            };
            
            console.log(`Creating release for tag: ${tagName}`);
            const release = await github.rest.repos.createRelease(releaseData);
            
            console.log(`Uploading asset: ${zipPath}`);
            const zipContent = fs.readFileSync(zipPath);
            
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: zipName,
              data: zipContent
            });
            
            console.log('Release created successfully!'); 